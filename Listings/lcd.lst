C51 COMPILER V9.56.0.0   LCD                                                               04/25/2017 21:07:32 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE LCD
OBJECT MODULE PLACED IN .\Objects\lcd.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE lcd.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings
                    -\lcd.lst) TABS(2) OBJECT(.\Objects\lcd.obj)

line level    source

   1          #include <REG8051_H.h>
   2          #include <define.h>
   3          void lastInitTry(){
   4   1        delay(100);
   5   1        CONTROL_PORT |= (1<<RST);
   6   1        delay(100);
   7   1        CONTROL_PORT &= ~(1<<RST);
   8   1        delay(100);
   9   1        CONTROL_PORT |= (1<<RST);
  10   1        delay(100);
  11   1        P0++;
  12   1        //TEXT HOME ADDRESS
  13   1        WriteData(0xFF);
  14   1        P0++;
  15   1        WriteData(0x7F);
  16   1        P0++;
  17   1        WriteCommand(0x40);
  18   1        P0++;
  19   1        //TEXT AREA SET
  20   1        WriteData(0x1A); //TRY 1A later 0x1A / 0x14
  21   1        P0++; //5
  22   1        WriteData(0x00);
  23   1        P0++;
  24   1        WriteCommand(0x41);
  25   1        P0++;
  26   1        //GRAPHIC HOME ADDRESS
  27   1        WriteData(0x00);
  28   1        P0++;
  29   1        WriteData(0x00);
  30   1        P0++;
  31   1        WriteCommand(0x42);
  32   1        //GRAPHIC AREA SET
  33   1        WriteData(0x14);
  34   1        P0++; //10
  35   1        WriteData(0x00);
  36   1        P0++;
  37   1        WriteCommand(0x43);
  38   1        //SET MODE = EXOR
  39   1        WriteCommand(0x81);
  40   1        P0++;
  41   1        SetAddressPointer(0x0000);
  42   1        //SET DISPLAY MODE
  43   1        WriteCommand(0x98);
  44   1        P0++;
  45   1      
  46   1      
  47   1      
  48   1      
  49   1      }
  50          
  51          
  52          
  53          
  54          //
C51 COMPILER V9.56.0.0   LCD                                                               04/25/2017 21:07:32 PAGE 2   

  55          
  56          
  57          void WriteData(unsigned char inputData) {
  58   1        while(!(CheckStatus() & 0x03));   //Check if is possible to write a command
  59   1        lcdData = inputData;
  60   1        CONTROL_PORT &= ~(1<<CD);
  61   1        CONTROL_PORT &= ~(1<<WR);
  62   1        CONTROL_PORT |= (1<<RD);
  63   1        CONTROL_PORT &= ~(1<<CE);
  64   1        delay(1);
  65   1        CONTROL_PORT |= (1<<CE);
  66   1      }
  67          
  68          
  69          unsigned char ReadData() {
  70   1        unsigned char temp;
  71   1        CONTROL_PORT &= ~(1<<CD);
  72   1        CONTROL_PORT |= (1<<WR);  
  73   1        CONTROL_PORT &= ~(1<<RD);
  74   1        CONTROL_PORT &= ~(1<<CE);
  75   1        delay(1); //Delay of 4*3 CPU cycles
  76   1        temp = lcdData;
  77   1        CONTROL_PORT |= (1<<CE);
  78   1        return temp;
  79   1      }
  80          void WriteCommand(unsigned char commandD){
  81   1        while(!(CheckStatus() & 0x03));   //Check if is possible to write a command
  82   1        lcdData = commandD;
  83   1        CONTROL_PORT |= (1<<CD);
  84   1        CONTROL_PORT &= ~(1<<WR);
  85   1        CONTROL_PORT |= (1<<RD);
  86   1        CONTROL_PORT &= ~(1<<CE);
  87   1        delay(1);
  88   1        CONTROL_PORT |= (1<<CE);
  89   1      }
  90          
  91          unsigned char CheckStatus() {
  92   1        unsigned char temp;
  93   1        CONTROL_PORT |= (1<<CD);
  94   1        CONTROL_PORT &= ~(1<<RD);
  95   1        CONTROL_PORT |= (1<<WR);
  96   1        CONTROL_PORT &= ~(1<<CE);
  97   1        delay(1); //Delay of 4*3 CPU cycles
  98   1        temp = lcdData;
  99   1        CONTROL_PORT |= (1<<CE);
 100   1        return temp;
 101   1      }
 102          
 103          
 104          void newInit(){
 105   1        
 106   1        CONTROL_PORT &= ~(1 << RST);
 107   1        delay(100);
 108   1        CONTROL_PORT |= (1 << RST);
 109   1        delay(100);
 110   1        SetAddressPointer(TEXT_HOME);
 111   1        WriteData(GRAPHIC_HOME & 0xFF);
 112   1        WriteData(GRAPHIC_HOME >> 8);
 113   1        WriteCommand(SET_GRAPHIC_HOME_ADDRESS);
 114   1        P0++;
 115   1        WriteData(GRAPHIC_AREA);
 116   1        WriteData(0x00);
C51 COMPILER V9.56.0.0   LCD                                                               04/25/2017 21:07:32 PAGE 3   

 117   1        WriteCommand(SET_GRAPHIC_AREA);
 118   1        P0++;
 119   1        WriteData(TEXT_HOME);
 120   1        WriteData(TEXT_HOME >> 8);
 121   1        WriteCommand(SET_TEXT_HOME_ADDRESS);
 122   1        P0++;
 123   1        WriteData(TEXT_AREA);
 124   1        WriteData(0x00);
 125   1        WriteCommand(SET_TEXT_AREA);
 126   1        P0++; //8
 127   1        /*
 128   1        WriteData(OFFSET_REGISTER);
 129   1        WriteData(0x00);
 130   1        WriteCommand(SET_OFFSET_REGISTER);
 131   1        */
 132   1        P0++;
 133   1        WriteCommand(DISPLAY_MODE  | GRAPHIC_DISPLAY_ON   | TEXT_DISPLAY_ON /*| T6963_CURSOR_DISPLAY_ON*/);
 134   1        P0++; //10
 135   1        WriteCommand(MODE_SET_OR);
 136   1        P0++;
 137   1      }
 138          
 139          
 140          void LCDSetPixel(unsigned char x, unsigned char y, unsigned char color)
 141          {
 142   1        unsigned char tmp;
 143   1        unsigned int address;
 144   1      
 145   1        address = GRAPHIC_HOME + (x / FONT_WIDTH) + (GRAPHIC_AREA * y);
 146   1        
 147   1        P0++; //8
 148   1        SetAddressPointer(address);
 149   1        P0++; //13
 150   1        WriteCommand(DATA_READ_AND_NONVARIABLE);
 151   1        P0++;  //14
 152   1        tmp = ReadData();
 153   1        P0++; //15
 154   1        if(color)
 155   1            tmp |= (1 <<  (FONT_WIDTH - 1 - (x % FONT_WIDTH)));
 156   1        else
 157   1          tmp &= ~(1 <<  (FONT_WIDTH - 1 - (x % FONT_WIDTH)));
 158   1        P0++;//16
 159   1        WriteDisplayData(tmp);
 160   1        P0++;//17
 161   1      }
 162          void WriteDisplayData(unsigned char x)
 163          {
 164   1        WriteData(x);
 165   1        WriteCommand(DATA_WRITE_AND_INCREMENT);
 166   1      }
 167          
 168          void SetAddressPointer(unsigned int address)
 169          {
 170   1        WriteData(address & 0xFF);
 171   1        WriteData(address >> 8);
 172   1        WriteCommand(0x24);
 173   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    522    ----
   CONSTANT SIZE    =   ----    ----
C51 COMPILER V9.56.0.0   LCD                                                               04/25/2017 21:07:32 PAGE 4   

   XDATA SIZE       =    200       6
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
